<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>内核模块常用操作命令</title>
    <link href="/2023/07/22/linux-mod/"/>
    <url>/2023/07/22/linux-mod/</url>
    
    <content type="html"><![CDATA[<h3 id="lsmod"><a href="#lsmod" class="headerlink" title="lsmod"></a>lsmod</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#列出所有系统加载的内核模块，list modules</span><br><span class="hljs-comment">#该命令的作用是读取/proc/modules并以格式正确的列表显示文件内容</span><br></code></pre></td></tr></table></figure><h3 id="insmod"><a href="#insmod" class="headerlink" title="insmod"></a>insmod</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">挂载驱动：insmod <span class="hljs-keyword">test</span>-tft.ko<br></code></pre></td></tr></table></figure><h3 id="rmmod"><a href="#rmmod" class="headerlink" title="rmmod"></a>rmmod</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">取消挂载驱动：rmmod <span class="hljs-keyword">test</span>-tft<br></code></pre></td></tr></table></figure><h3 id="dmesg"><a href="#dmesg" class="headerlink" title="dmesg"></a>dmesg</h3><p>查看内核打印的日志</p><h3 id="uname"><a href="#uname" class="headerlink" title="uname"></a>uname</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">-r <span class="hljs-comment">#查找正在运行的内核的发行版本</span><br>-a <br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>检测声卡驱动</title>
    <link href="/2023/07/22/linux-alsa/"/>
    <url>/2023/07/22/linux-alsa/</url>
    
    <content type="html"><![CDATA[<figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">sudo apt install alsa</span><span class="hljs-literal">-</span><span class="hljs-comment">utils</span><br><span class="hljs-comment">sudo apt install alsa</span><span class="hljs-literal">-</span><span class="hljs-comment">base</span><br><br><span class="hljs-comment">arecord 录音播放命令</span><br>  <span class="hljs-comment">arecord</span>  <span class="hljs-literal">--</span><span class="hljs-comment">device=plughw:0</span><span class="hljs-string">,</span><span class="hljs-comment">0</span> <span class="hljs-literal">--</span><span class="hljs-comment">format S16_LE</span> <span class="hljs-literal">--</span><span class="hljs-comment">rate 48000</span> <span class="hljs-literal">-</span><span class="hljs-comment">c2 | aplay</span> <span class="hljs-literal">--</span><span class="hljs-comment">device=plughw:0</span><span class="hljs-string">,</span><span class="hljs-comment">0</span><br><span class="hljs-comment">只录音</span><br>  <span class="hljs-comment">arecord</span>  <span class="hljs-literal">--</span><span class="hljs-comment">device=plughw:0</span><span class="hljs-string">,</span><span class="hljs-comment">0</span> <span class="hljs-literal">-</span><span class="hljs-comment">d 10</span> <span class="hljs-literal">--</span><span class="hljs-comment">format S32_LE</span> <span class="hljs-literal">--</span><span class="hljs-comment">rate 44100</span> <span class="hljs-literal">-</span><span class="hljs-comment">c2</span> <span class="hljs-literal">-</span><span class="hljs-comment">t wav test</span><span class="hljs-string">.</span><span class="hljs-comment">wav</span><br><span class="hljs-comment">只播放</span><br>  <span class="hljs-comment">aplay</span> <span class="hljs-literal">--</span><span class="hljs-comment">device=plughw:0</span><span class="hljs-string">,</span><span class="hljs-comment">0 test</span><span class="hljs-string">.</span><span class="hljs-comment">wav</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>USB</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网卡限速和网卡测速</title>
    <link href="/2023/07/22/linux-wondershaper/"/>
    <url>/2023/07/22/linux-wondershaper/</url>
    
    <content type="html"><![CDATA[<h2 id="wondershaper"><a href="#wondershaper" class="headerlink" title="wondershaper"></a>wondershaper</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">git clone https://github.com/magnific0/wondershaper.git #下载即用<br></code></pre></td></tr></table></figure><p>限速命令：（下行、上行，单位kb）</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ldif">wondershaper eth0 5000 500<br><span class="hljs-comment">#默认顺序，可不带参数：wondershaper 网卡 下行 上行</span><br><span class="hljs-literal">-</span>a：网卡名<br><span class="hljs-literal">-</span>d：下载速率<br><span class="hljs-literal">-</span>u：上传速度<br></code></pre></td></tr></table></figure><p>取消限速：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">wondershaper clear eth0<br></code></pre></td></tr></table></figure><h2 id="nload"><a href="#nload" class="headerlink" title="nload"></a>nload</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#一个基于命令行的实时网络流量和带宽使用监视器</span><br>sudo apt install nload<br></code></pre></td></tr></table></figure><p>一旦成功 Nload，使用 Nload 运行简单的命令：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">nload</span><br></code></pre></td></tr></table></figure><p>或者，您可以通过指定网络设备名称来启动 Nload，例如：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nload</span> eth0<br></code></pre></td></tr></table></figure><p>要同时显示所有设备的网络统计信息，请使用 <strong>-m</strong> 选项如下：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">nload -m</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>samba 共享文件夹</title>
    <link href="/2023/07/22/linux-samba/"/>
    <url>/2023/07/22/linux-samba/</url>
    
    <content type="html"><![CDATA[<h2 id="samba安装"><a href="#samba安装" class="headerlink" title="samba安装"></a>samba安装</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">sudo apt-get update<br>sudo apt-get install samba<br></code></pre></td></tr></table></figure><h2 id="指定账号的访问"><a href="#指定账号的访问" class="headerlink" title="指定账号的访问"></a>指定账号的访问</h2><p> 选择一个共享路径，假设为&#x2F;home&#x2F;work&#x2F;sharedir，不存在的情况下可以自己创建</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">sudo mkdir -p /home/work/sharedir<br></code></pre></td></tr></table></figure><p>添加一个可访问用户到Ubuntu系统中，如smbuser，若存在则不需要创建</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">sudo useradd smbuser -s /usr/sbin/nologin<br></code></pre></td></tr></table></figure><p>修改文件权限使得smbuser用户能够访问共享路径</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">sudo chown smbuser:smbuser /home/work/sharedir<br></code></pre></td></tr></table></figure><p>将用户smbuser添加到samba的smbpasswd file中（即在samba服务中注册该账户）</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">sudo smbpasswd -a smbuser<br>#后续设置登录密码，用于远程访问<br></code></pre></td></tr></table></figure><h2 id="修改samba配置文件（-etc-samba-smb-conf）"><a href="#修改samba配置文件（-etc-samba-smb-conf）" class="headerlink" title="修改samba配置文件（&#x2F;etc&#x2F;samba&#x2F;smb.conf）"></a>修改samba配置文件（&#x2F;etc&#x2F;samba&#x2F;smb.conf）</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs text"># 打开文件<br>sudo vim /etc/samba/smb.conf<br>#在文件尾部添加以下信息，并保存（vim中:wq保存）<br>   <br>[share]#共享目录名，访问时的展示名<br>   comment = share folder#该共享目录的描述<br>   browseable = yes#可浏览，是<br>   path = /home/work/sharedir  #访问的实际路径,前面设置的<br>   create mask = 0700<br>   directory mask = 0700<br>   valid users = smbuser#设置可访问的用户，此处为前面添加的用户smbuser<br>   force user = smbuser<br>   force group = smbuser<br>   public = yes<br>   available = yes<br>   writable = yes#可写，是<br></code></pre></td></tr></table></figure><h2 id="重启服务，使上述设置生效"><a href="#重启服务，使上述设置生效" class="headerlink" title="重启服务，使上述设置生效"></a>重启服务，使上述设置生效</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">sudo service smbd restart<br>sudo service nmbd restart<br>#或者以下方法<br>sudo restart smbd<br>sudo restart nmbd<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux文件常用操作命令</title>
    <link href="/2023/07/22/linux-file/"/>
    <url>/2023/07/22/linux-file/</url>
    
    <content type="html"><![CDATA[<h3 id="ln-软连接"><a href="#ln-软连接" class="headerlink" title="ln 软连接"></a>ln 软连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">软连接（符号连接）：类似于Windows快捷方式<br>创建：<span class="hljs-built_in">ln</span> -s 源文件 目标文件<br>修改：<span class="hljs-built_in">ln</span> -snf 新源 目标<br></code></pre></td></tr></table></figure><h3 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">ls</span> | <span class="hljs-built_in">wc</span> -w <span class="hljs-comment">#查看文件个数</span><br></code></pre></td></tr></table></figure><h3 id="du"><a href="#du" class="headerlink" title="du"></a>du</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#查看当前文件夹下第一级的大小排序</span><br><span class="hljs-built_in">du</span> -sh *|<span class="hljs-built_in">sort</span> -nr<br><br><span class="hljs-comment">#查看当前文件夹和其子文件夹下的排序</span><br><span class="hljs-built_in">du</span> -ah .|<span class="hljs-built_in">sort</span> -nr<br></code></pre></td></tr></table></figure><h3 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">rm</span> `<span class="hljs-built_in">ls</span> | grep -v <span class="hljs-string">&quot;net&quot;</span>` <span class="hljs-comment">#删除不含net的文件</span><br></code></pre></td></tr></table></figure><h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ada">查找文件内容:<br>grep -rn <span class="hljs-string">&quot;查找内容&quot;</span> 文件名<span class="hljs-comment">--r递归 n显示行号 </span><br><br>-i：忽略大小写<br>-v：反向查找<br></code></pre></td></tr></table></figure><h3 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h3><h4 id="f"><a href="#f" class="headerlink" title="-f"></a>-f</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">打印日志：tail -f /<span class="hljs-keyword">var</span>/<span class="hljs-keyword">log</span>/<span class="hljs-keyword">test</span>.<span class="hljs-keyword">log</span><br></code></pre></td></tr></table></figure><h4 id="n"><a href="#n" class="headerlink" title="-n"></a>-n</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">打印最后500行：<span class="hljs-built_in">tail</span> -n 500 filename<br></code></pre></td></tr></table></figure><h3 id="chmod-修改读写执行权限"><a href="#chmod-修改读写执行权限" class="headerlink" title="chmod 修改读写执行权限"></a>chmod 修改读写执行权限</h3><pre><code class="hljs">r=4 w=2 x=1 u=g=o=a=UserGroupOther所有人所有者  所在组其他组+-=</code></pre><h3 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> -p a/b/c <span class="hljs-comment">#建立多级目录</span><br><span class="hljs-built_in">mkdir</span> &#123;a,b,c&#125;/src <span class="hljs-comment">#每个文件夹里建立src文件夹</span><br></code></pre></td></tr></table></figure><h3 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">touch</span> html/&#123;index.html,page.html&#125; <span class="hljs-comment">#建立多个文件</span><br></code></pre></td></tr></table></figure><h3 id="sftp"><a href="#sftp" class="headerlink" title="sftp"></a>sftp</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-comment"># 连接远程服务器</span><br>sftp 用户名@IP<br><span class="hljs-comment"># 查看当前服务器路径</span><br>lpwd<br><span class="hljs-comment"># 查看远程服务器路径[默认用户home目录]</span><br>pwd<br><span class="hljs-comment"># 上传文件</span><br><span class="hljs-keyword">put</span> 当前路径  远程连接<br><span class="hljs-comment"># 下载文件</span><br><span class="hljs-keyword">get</span> 远程路径  当前路径<br></code></pre></td></tr></table></figure><h3 id="chown-修改文件所有者"><a href="#chown-修改文件所有者" class="headerlink" title="chown 修改文件所有者"></a>chown 修改文件所有者</h3><pre><code class="hljs">chown newowner file</code></pre><h3 id="chgrp-修改文件所有组"><a href="#chgrp-修改文件所有组" class="headerlink" title="chgrp 修改文件所有组"></a>chgrp 修改文件所有组</h3><pre><code class="hljs">chgrp newgroup file</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>U盘启动时，提示不是安全启动</title>
    <link href="/2023/07/22/win-bios-operate/"/>
    <url>/2023/07/22/win-bios-operate/</url>
    
    <content type="html"><![CDATA[<h3 id="进入BIOS-Security-菜单"><a href="#进入BIOS-Security-菜单" class="headerlink" title="进入BIOS Security 菜单"></a>进入BIOS Security 菜单</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">Secure <span class="hljs-keyword">Boot </span>—&gt; <span class="hljs-keyword">Disabled</span><br><span class="hljs-keyword"></span><br>Startup csm —&gt; Enable<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>USB</tag>
      
      <tag>windows</tag>
      
      <tag>BIOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows下的cmd命令</title>
    <link href="/2023/07/22/win-cmd-operate/"/>
    <url>/2023/07/22/win-cmd-operate/</url>
    
    <content type="html"><![CDATA[<h2 id="查看任务列表"><a href="#查看任务列表" class="headerlink" title="查看任务列表"></a>查看任务列表</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">tasklist</span><br></code></pre></td></tr></table></figure><h2 id="kill-task"><a href="#kill-task" class="headerlink" title="kill task"></a>kill task</h2><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">taskkill /im <span class="hljs-number">1</span>.exe /f<br><br>`/im` 是 <span class="hljs-string">&quot;Image Name&quot;</span> 的缩写，表示要终止的进程的名称。<br>`/f`：这是一个可选参数，表示强制终止进程。<br></code></pre></td></tr></table></figure><h2 id="查看端口占用"><a href="#查看端口占用" class="headerlink" title="查看端口占用"></a>查看端口占用</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">netstat -ano</span><br></code></pre></td></tr></table></figure><h2 id="查找字符串"><a href="#查找字符串" class="headerlink" title="查找字符串"></a>查找字符串</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-string">|findstr “string”</span><br></code></pre></td></tr></table></figure><h2 id="查询目录：dir"><a href="#查询目录：dir" class="headerlink" title="查询目录：dir"></a>查询目录：dir</h2><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs isbl">/<span class="hljs-variable">A</span> <br>显示具有指定属性的文件，又分<span class="hljs-function"><span class="hljs-title">H</span>(隐藏)、<span class="hljs-title">S</span>(系统)、<span class="hljs-title">D</span>(目录)、<span class="hljs-title">R</span>(只读)、<span class="hljs-title">A</span>(保存)</span><br></code></pre></td></tr></table></figure><h2 id="切换：cd"><a href="#切换：cd" class="headerlink" title="切换：cd"></a>切换：cd</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#从c盘切到d盘</span><br>d:<br>或<br><span class="hljs-built_in">cd</span> /d D:<br></code></pre></td></tr></table></figure><h2 id="新增：md"><a href="#新增：md" class="headerlink" title="新增：md"></a>新增：md</h2><h2 id="删除：rd"><a href="#删除：rd" class="headerlink" title="删除：rd"></a>删除：rd</h2><h2 id="rename-重命名前-重命名后"><a href="#rename-重命名前-重命名后" class="headerlink" title="rename 重命名前 重命名后"></a>rename 重命名前 重命名后</h2><h2 id="移动：move"><a href="#移动：move" class="headerlink" title="移动：move"></a>移动：move</h2><h2 id="查看历史：doskey-history"><a href="#查看历史：doskey-history" class="headerlink" title="查看历史：doskey&#x2F;history"></a>查看历史：doskey&#x2F;history</h2>]]></content>
    
    
    
    <tags>
      
      <tag>windows</tag>
      
      <tag>cmd</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx使用</title>
    <link href="/2023/07/22/nginx-operate/"/>
    <url>/2023/07/22/nginx-operate/</url>
    
    <content type="html"><![CDATA[<h1 id="1-常用操作"><a href="#1-常用操作" class="headerlink" title="1 常用操作"></a>1 常用操作</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">--启动<br><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/openresty/</span>nginx<span class="hljs-regexp">/sbin/</span>nginx<br>--停止<br><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/openresty/</span>nginx<span class="hljs-regexp">/sbin/</span>nginx -s stop<br>--重启<br><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/openresty/</span>nginx<span class="hljs-regexp">/sbin/</span>nginx -s reload<br>--检验nginx配置是否正确<br><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/openresty/</span>nginx<span class="hljs-regexp">/sbin/</span>nginx -t<br></code></pre></td></tr></table></figure><h1 id="2-配置密码"><a href="#2-配置密码" class="headerlink" title="2 配置密码"></a>2 配置密码</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment">#安装htpasswd</span><br><span class="hljs-attribute">sudo</span> apt-get install apache2-utils<br><br><span class="hljs-comment">#生成密码</span><br>htpasswd -c ./ip_passwdfile username<br><br><span class="hljs-comment">#在nginx.conf添加（记得覆盖default</span><br>auth_basic <span class="hljs-string">&quot;please input username and password:&quot;</span>;                             <span class="hljs-attribute">auth_basic_user_file</span> /data/web/passwd/ip_passwdfile;<br></code></pre></td></tr></table></figure><h1 id="3-其他"><a href="#3-其他" class="headerlink" title="3 其他"></a>3 其他</h1><blockquote><p>nginx+lua：只启动时，报一次require失败的错 </p></blockquote><blockquote><p>nginx.conf日后补充</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker常用操作</title>
    <link href="/2023/07/22/docker-operate/"/>
    <url>/2023/07/22/docker-operate/</url>
    
    <content type="html"><![CDATA[<h1 id="1-获取镜像"><a href="#1-获取镜像" class="headerlink" title="1. 获取镜像"></a>1. 获取镜像</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">docker pull <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="2-启动docker"><a href="#2-启动docker" class="headerlink" title="2. 启动docker"></a>2. 启动docker</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -itd --name &lt;docker_name&gt; --privileged <span class="hljs-attribute">--restart</span>=always -e <span class="hljs-attribute">X_UID</span>=1024 -e <span class="hljs-attribute">X_GID</span>=1024 -v /home/test/work:/ext_files &lt;url&gt; /startup.sh <br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#参数解释</span><br>1、X_GID，X_UID:<br><span class="hljs-comment">#镜像无须验证就不配</span><br>$ <span class="hljs-built_in">id</span><br>uid=1023(<span class="hljs-built_in">test</span>) gid=1023(<span class="hljs-built_in">test</span>) <span class="hljs-built_in">groups</span>=1023(<span class="hljs-built_in">test</span>),27(sudo),999(docker)<br><br>2、-v /home/test/work:/ext_files <br><span class="hljs-comment">#将/home/test/work 本机的一个工作目录挂载到docker环境目录/ext_files下</span><br><span class="hljs-comment">#注意：删除docker时，记得把work下文件也删除</span><br></code></pre></td></tr></table></figure><h1 id="3-进入docker"><a href="#3-进入docker" class="headerlink" title="3. 进入docker"></a>3. 进入docker</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">docker exec -it -u <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">docker_name</span>&gt;</span> bash<br></code></pre></td></tr></table></figure><h1 id="4-重命名"><a href="#4-重命名" class="headerlink" title="4. 重命名"></a>4. 重命名</h1><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">docker <span class="hljs-built_in">rename</span> oledname newname<br></code></pre></td></tr></table></figure><h1 id="5-查看容器映射目录"><a href="#5-查看容器映射目录" class="headerlink" title="5. 查看容器映射目录"></a>5. 查看容器映射目录</h1><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gradle">docker <span class="hljs-keyword">inspect</span> dockername | <span class="hljs-keyword">grep</span> Mounts -A dockerID<br><br><span class="hljs-string">&quot;HostConfig&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;Binds&quot;</span>: [<br>                <span class="hljs-string">&quot;映射目录&quot;</span><br>            ],<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git常用操作</title>
    <link href="/2023/07/22/git-operate/"/>
    <url>/2023/07/22/git-operate/</url>
    
    <content type="html"><![CDATA[<h1 id="1-git-config"><a href="#1-git-config" class="headerlink" title="1. git config"></a>1. git config</h1><h2 id="1-1-代理"><a href="#1-1-代理" class="headerlink" title="1.1 代理"></a>1.1 代理</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs stylus">#添加<br>git config <span class="hljs-attr">--global</span> http<span class="hljs-selector-class">.proxy</span> &lt;proxy_address&gt;<br><br>#查看<br>git config <span class="hljs-attr">--global</span> <span class="hljs-attr">--get</span> http<span class="hljs-selector-class">.proxy</span><br>git config <span class="hljs-attr">--global</span> <span class="hljs-attr">--get</span> https<span class="hljs-selector-class">.proxy</span><br><br>#删除<br>git config <span class="hljs-attr">--global</span> <span class="hljs-attr">--unset</span> http<span class="hljs-selector-class">.proxy</span><br>git config <span class="hljs-attr">--global</span> <span class="hljs-attr">--unset</span> https<span class="hljs-selector-class">.proxy</span><br></code></pre></td></tr></table></figure><h2 id="1-2-用户信息"><a href="#1-2-用户信息" class="headerlink" title="1.2 用户信息"></a>1.2 用户信息</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lua">git <span class="hljs-built_in">config</span> <span class="hljs-comment">--global user.name &lt;username&gt;</span><br>git <span class="hljs-built_in">config</span> <span class="hljs-comment">--global user.email &lt;email&gt;</span><br></code></pre></td></tr></table></figure><h2 id="1-3-凭证存储-记住密码"><a href="#1-3-凭证存储-记住密码" class="headerlink" title="1.3 凭证存储(记住密码)"></a>1.3 凭证存储(记住密码)</h2><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">git config <span class="hljs-keyword">global</span> credential helper <span class="hljs-keyword">store</span><br></code></pre></td></tr></table></figure><p>查看凭证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.git-credentials<br></code></pre></td></tr></table></figure><h2 id="1-3-查看git信息"><a href="#1-3-查看git信息" class="headerlink" title="1.3 查看git信息"></a>1.3 查看git信息</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">git <span class="hljs-built_in">config</span> <span class="hljs-comment">--list</span><br></code></pre></td></tr></table></figure><h1 id="2-git-tag"><a href="#2-git-tag" class="headerlink" title="2. git tag"></a>2. git tag</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#增加tag</span><br>git tag -a v1.01.0001 -m <span class="hljs-string">&#x27;描述&#x27;</span><br><br><span class="hljs-comment">#删除本地tag</span><br>git tag -d v1.01.0001<br><span class="hljs-comment">#删除远程tag</span><br>git push origin :refs/tags/tagName<br><br><span class="hljs-comment">#查看本地tag</span><br>git tag<br><span class="hljs-comment">#查看远程tag</span><br>git ls-remote --tags origin <br><br><span class="hljs-comment">#推送tag</span><br>git push --tags<br>或<br>git push origin --tags<br></code></pre></td></tr></table></figure><h1 id="3-git-submodule"><a href="#3-git-submodule" class="headerlink" title="3. git submodule"></a>3. git submodule</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#增加子模块</span><br>git submodule add &lt;url&gt; &lt;path&gt;<br><span class="hljs-comment">#&lt;path&gt;为空时，显示仓库原始名字</span><br><br><span class="hljs-comment">#删除子模块</span><br>git <span class="hljs-built_in">rm</span> --cached &lt;submodule_name&gt;<br><span class="hljs-built_in">rm</span> -rf &lt;submodule_name&gt;<br>vi .gitmodules 删除&lt;submodule_name&gt;配置<br><span class="hljs-built_in">rm</span> .git/modules/&lt;submodule_name&gt;<br>vi .git/config 删除&lt;submodule_name&gt;配置<br><br><span class="hljs-comment">#更新子模块</span><br>git submodule update --init --recursive <span class="hljs-comment">#初始递归更新</span><br><br><span class="hljs-comment">#查看子模块</span><br>git submodule <br></code></pre></td></tr></table></figure><p>你可能会遇到：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">fatal: please stage your changes <span class="hljs-keyword">to</span> .gitmodules <span class="hljs-keyword">or</span> stash them <span class="hljs-keyword">to</span> proceed<br><span class="hljs-comment">#需要暂存.gitmodules</span><br>git <span class="hljs-built_in">add</span> .gitmodules<br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">git submodule: already <span class="hljs-keyword">exists</span> <span class="hljs-keyword">in</span> the <span class="hljs-keyword">index</span><br><br>git rm -r <span class="hljs-comment">--cached &lt;dir_name&gt;</span><br></code></pre></td></tr></table></figure><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>工程里含有大文件时：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs llvm">sudo apt install git-lfs<br><br>vi ~/.gitconfig 加入下面内容<br>[<span class="hljs-keyword">filter</span> <span class="hljs-string">&quot;lfs&quot;</span>]        <br>smudge <span class="hljs-operator">=</span> git-lfs smudge -- <span class="hljs-variable">%f</span>        <br>process <span class="hljs-operator">=</span> git-lfs <span class="hljs-keyword">filter</span>-process        <br>required <span class="hljs-operator">=</span> <span class="hljs-keyword">true</span>        <br>clean <span class="hljs-operator">=</span> git-lfs clean -- <span class="hljs-variable">%f</span><br></code></pre></td></tr></table></figure><h1 id="4-git-diff"><a href="#4-git-diff" class="headerlink" title="4. git diff"></a>4. git diff</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment">#查看未缓存修改内容</span><br>git <span class="hljs-keyword">diff</span><br><span class="hljs-keyword"></span><br><span class="hljs-comment">#查看已缓存修改内容</span><br>git <span class="hljs-keyword">diff </span>--<span class="hljs-keyword">cached </span><br><br><span class="hljs-comment">#查看所有修改内容</span><br>git <span class="hljs-keyword">diff </span>HEAD <br></code></pre></td></tr></table></figure><h1 id="5-fork"><a href="#5-fork" class="headerlink" title="5. fork"></a>5. fork</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#添加项目A的远程仓库地址到&lt;test&gt;</span><br>git remote add &lt;<span class="hljs-built_in">test</span>&gt; &lt;A_address&gt; <br><br><span class="hljs-comment">#把项目A更新至本地的&lt;test&gt;里 </span><br>git fetch &lt;<span class="hljs-built_in">test</span>&gt; <br><br><span class="hljs-comment">#切换到你自己想要merge的分支</span><br>git checkout master <br><br><span class="hljs-comment">#merge项目A的更新到你的branch </span><br>git merge &lt;<span class="hljs-built_in">test</span>&gt;/master<br></code></pre></td></tr></table></figure><h1 id="6-git-reset"><a href="#6-git-reset" class="headerlink" title="6. git reset"></a>6. git reset</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">git reset . #撤销 git add . <br><br>git reset &lt;commit_id&gt; #(撤回到指定提交位置，但是修改的代码会保存)<br><br>git reset   #回滚<br>--mixed #不删除工作空间改动代码，撤销commit，并且撤销git add . 操作（默认<br>--soft #不删除工作空间改动代码，撤销commit，不撤销git add .<br>--hard #删除工作空间改动代码，撤销commit，撤销git add .<br></code></pre></td></tr></table></figure><h1 id="7-git-commit"><a href="#7-git-commit" class="headerlink" title="7. git commit"></a>7. git commit</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git commit --amend #更改描述<br></code></pre></td></tr></table></figure><h1 id="8-git-checkout"><a href="#8-git-checkout" class="headerlink" title="8. git checkout"></a>8. git checkout</h1><h2 id="8-1-切换分支"><a href="#8-1-切换分支" class="headerlink" title="8.1 切换分支"></a>8.1 切换分支</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">git checkout &lt;branch_name&gt;<br><br>git checkout -b &lt;branch_name&gt; <span class="hljs-comment">#切换到新分支(会基于当前所在分支进行新建) = git branch newbranch + git checkout newbranch</span><br></code></pre></td></tr></table></figure><h2 id="8-2-撤销修改"><a href="#8-2-撤销修改" class="headerlink" title="8.2 撤销修改"></a>8.2 撤销修改</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada">放弃所有：git checkout .<br>放弃某个：git checkout <span class="hljs-comment">-- filename</span><br>强制放弃：git checkout -f<br></code></pre></td></tr></table></figure><h3 id="8-2-1-未使用git-add-缓存代码"><a href="#8-2-1-未使用git-add-缓存代码" class="headerlink" title="8.2.1. 未使用git add 缓存代码"></a>8.2.1. 未使用git add 缓存代码</h3><ul><li>使用git checkout – filename，注意中间有–</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">git checkout -- filename<br></code></pre></td></tr></table></figure><ul><li>放弃所有文件修改 git checkout .</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">git checkout .<br></code></pre></td></tr></table></figure><ul><li>此命令用来放弃掉所有还没有加入到缓存区（就是 git add 命令）的修改：<strong>内容修改与整个文件删除</strong></li><li><strong>此命令不会删除新建的文件，因为新建的文件还没加入git管理系统中，所以对git来说是未知，只需手动删除即可</strong></li></ul><h3 id="8-2-2-已使用git-add-缓存代码，未使用git-commit"><a href="#8-2-2-已使用git-add-缓存代码，未使用git-commit" class="headerlink" title="8.2.2. 已使用git add 缓存代码，未使用git commit"></a>8.2.2. 已使用git add 缓存代码，未使用git commit</h3><ul><li>使用 git reset HEAD filename</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">git reset HEAD filename<br></code></pre></td></tr></table></figure><ul><li>放弃所有文件修改 git reset HEAD</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">git reset HEAD<br></code></pre></td></tr></table></figure><ul><li>此命令用来清除 git  对于文件修改的缓存。相当于撤销 git add 命令所在的工作。<strong>在使用本命令后，本地的修改并不会消失，而是回到了第一步1. 未使用git add 缓存代码，继续使用用git checkout – filename，就可以放弃本地修改</strong></li></ul><h3 id="8-2-3-已经用-git-commit-提交了代码"><a href="#8-2-3-已经用-git-commit-提交了代码" class="headerlink" title="8.2.3 已经用 git commit  提交了代码"></a>8.2.3 已经用 git commit  提交了代码</h3><ul><li>使用 git reset –hard HEAD^ 来回退到上一次commit的状态</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">git reset --hard HEAD^<br></code></pre></td></tr></table></figure><ul><li>或者回退到任意版本git reset –hard  commit id ，使用git log命令查看git提交历史和commit id</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs objectivec">git reset --hard commit <span class="hljs-type">id</span><br></code></pre></td></tr></table></figure><h1 id="9-git-branch"><a href="#9-git-branch" class="headerlink" title="9. git branch"></a>9. git branch</h1><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span>a all <span class="hljs-comment">#显示所有，本地+远程</span><br><span class="hljs-literal">-</span>b build <span class="hljs-comment">#新建分支</span><br><span class="hljs-literal">-</span>d delete <span class="hljs-comment">#删除分支</span><br><br><span class="hljs-literal">-</span>-set-upstream-to=远程分支 本地分支<span class="hljs-comment">#关联分支</span><br></code></pre></td></tr></table></figure><h1 id="10-git-remote"><a href="#10-git-remote" class="headerlink" title="10. git remote"></a>10. git remote</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">git remote #显示主机名<br>git remote -v #显示所有远程仓库<br><br>git remote add origin(可自定义，仓库别名) 仓库地址  #添加仓库地址<br>git remote add &lt;test&gt; &lt;A_address&gt;<br><br>git remote remove origin  #取消关联的origin远程仓库<br></code></pre></td></tr></table></figure><h1 id="11-git-clone"><a href="#11-git-clone" class="headerlink" title="11. git clone"></a>11. git clone</h1><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">&lt;url</span>&gt;<br></code></pre></td></tr></table></figure><h1 id="12-git-status"><a href="#12-git-status" class="headerlink" title="12. git status"></a>12. git status</h1><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">git status</span><br></code></pre></td></tr></table></figure><h1 id="13-git-push"><a href="#13-git-push" class="headerlink" title="13. git push"></a>13. git push</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">git push origin dev --force #强制提交<br><br>git push origin--delete 分支名  #删除线上分支<br><br>git push origin [BRANCH_NAME]#发布至指定分支<br><br>git push origin [BRANCH_NAME]:[BRANCH_NAME] #新建远程分支<br></code></pre></td></tr></table></figure><h1 id="14-git-merge"><a href="#14-git-merge" class="headerlink" title="14. git merge"></a>14. git merge</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git merge &lt;branch_name&gt;<span class="hljs-comment">#合并分支</span><br></code></pre></td></tr></table></figure><h1 id="15-git-reflog"><a href="#15-git-reflog" class="headerlink" title="15. git reflog"></a>15. git reflog</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git reflog <span class="hljs-comment">#查看顺序提交列表（本地存储</span><br></code></pre></td></tr></table></figure><h1 id="16-git-fetch"><a href="#16-git-fetch" class="headerlink" title="16. git fetch"></a>16. git fetch</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">git fetch -p <span class="hljs-comment">#拉取远程代码,pull不会更新其他分支 git fetch + git merge == git pull </span><br><br>git fetch 仓库别名 <span class="hljs-comment">#同步当前仓库分支(一般在 添加仓库地址后 用)</span><br></code></pre></td></tr></table></figure><h1 id="17-git-pull"><a href="#17-git-pull" class="headerlink" title="17. git pull"></a>17. git pull</h1><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cos">git pull<br><br>取回远程库中的develop分支，与本地的develop分支进行<span class="hljs-keyword">merge</span>，要写成：<br>git pull origin develop:develop<br></code></pre></td></tr></table></figure><h1 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h1><p>忽略文件：文件内例出想忽略的文件名,如:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><span class="hljs-keyword">test</span>.lua<br>oe-logs<br>oe-workdir<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo+fluid+github.io使用体验</title>
    <link href="/2023/07/20/helloMyself/"/>
    <url>/2023/07/20/helloMyself/</url>
    
    <content type="html"><![CDATA[<h1 id="基于win11的环境搭建"><a href="#基于win11的环境搭建" class="headerlink" title="基于win11的环境搭建"></a>基于win11的环境搭建</h1><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>这个不细说，前&#x2F;后端程序员都有；</p><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p><a href="https://nodejs.org/zh-cn/download">下载 | Node.js (nodejs.org)</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">node</span> -v<br><span class="hljs-attribute">v18</span>.<span class="hljs-number">16</span>.<span class="hljs-number">1</span><br><br><span class="hljs-attribute">npm</span> -v<br><span class="hljs-attribute">9</span>.<span class="hljs-number">5</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p><a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><h1 id="Hexo-Github"><a href="#Hexo-Github" class="headerlink" title="Hexo + Github"></a>Hexo + Github</h1><h2 id="建立网站"><a href="#建立网站" class="headerlink" title="建立网站"></a>建立网站</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift">hexo <span class="hljs-keyword">init</span> &lt;your_blog_dir&gt;<br></code></pre></td></tr></table></figure><p><a href="https://easyhexo.com/1-Hexo-install-and-config/1-3-config-hexo.html#%E5%BB%BA%E7%AB%8B%E7%BD%91%E7%AB%99">配置 Hexo | Easy Hexo 👨‍💻</a></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><h2 id="部署配置"><a href="#部署配置" class="headerlink" title="部署配置"></a>部署配置</h2><p>在 _config.yml 中添加以下配置（如果配置已经存在，请将其替换为如下）:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/&lt;username&gt;/&lt;project&gt;</span><br>  <span class="hljs-comment"># example, https://github.com/hexojs/hexojs.github.io</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span><br></code></pre></td></tr></table></figure><p>执行 hexo clean &amp;&amp; hexo deploy 。<br>浏览 &lt;GitHub 用户名&gt;.github.io 检查你的网站能否运作。</p><p><a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></p><h2 id="deploy时发生的连接错误"><a href="#deploy时发生的连接错误" class="headerlink" title="deploy时发生的连接错误"></a>deploy时发生的连接错误</h2><blockquote><p>Failed to connect to github.com port 443 after 21054 ms: Couldn’t connect to server</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> http<span class="hljs-selector-class">.sslVerify</span> <span class="hljs-string">&quot;false&quot;</span><br></code></pre></td></tr></table></figure><blockquote><p>Recv failure: Connection was reset</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> <span class="hljs-attr">--unset</span> http<span class="hljs-selector-class">.proxy</span><br>git config <span class="hljs-attr">--global</span> <span class="hljs-attr">--unset</span> https.proxy<br></code></pre></td></tr></table></figure><p>最后，实在不行，就重启试试。</p><h1 id="坑来了"><a href="#坑来了" class="headerlink" title="坑来了"></a>坑来了</h1><p>去年在main分支上配置了github的自带theme：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-built_in">theme</span>: jekyll-<span class="hljs-built_in">theme</span>-architect<br></code></pre></td></tr></table></figure><p>今年狠狠地心动了fluid，加上十分嫌弃某些广告网站，拖了一万年的我决定开干！忙里偷闲了四天，终于调通了github的deploy！为什么卡了四天？</p><p>上述教程的deploy配置比其他教程的靠谱，但branch不能是gh-pages，只能是main。把default branch改为gh-pages，Deployment branches 移除main增加gh-pages，都没用！</p><p>每次<em>hexo deploy</em>都显示<em>INFO  Deploy done: git</em>，但页面没更新，github-pages里的记录是去年的。Actions里的<em>pages bulid and deployment</em>也是main标签，查看error log提示找不到theme fluid。</p><p>搜了很多资料没有找到解决办法，最后灵机一动：<strong>将branch从gh-pages改为main</strong>。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> https:<span class="hljs-comment">//github.com/Git0Bug/Git0Bug.github.io</span><br><span class="hljs-symbol">  branch:</span> main<br></code></pre></td></tr></table></figure><p>看到Environment-&gt;github-pages-&gt;failure觉得有戏，一看deploy报错是规则限制，马上反应过来，将Deployment branches 移除gh-pages增加main。</p><p>当看到fluid属于我的打字效果闪动，脑海中的烟花绽放了，每朵都是hello world。终于等到你，还好我没放弃~</p><blockquote><p>以输出倒逼输入！多复盘多反思！不做盲驴拉磨！</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>debug</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/07/16/hello-world/"/>
    <url>/2023/07/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
